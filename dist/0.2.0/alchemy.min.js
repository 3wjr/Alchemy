(function(){"Alchemy.js is a graph drawing application for the web.\nCopyright (C) 2014  GraphAlchemist, Inc.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\nlets";var a,b,c=function(a,b){return function(){return a.apply(b,arguments)}};a=function(){function a(){this.begin=c(this.begin,this),this.setState=c(this.setState,this),this.getState=c(this.getState,this),this.version="#VERSION#",this.layout={},this.interactions={},this.utils={},this.visControls={},this.styles={},this.models={},this.drawing={},this.log={},this.state={interactions:"default",layout:"default",filters:{edges:{},nodes:{}}}}return a.prototype.getState=function(){return null!=this.state.key?this.state.key:void 0},a.prototype.setState=function(a,b){return this.state.key=b},a.prototype.begin=function(a){return this.conf=_.assign({},alchemy.defaults,a),"string"==typeof alchemy.conf.dataSource?d3.json(alchemy.conf.dataSource,alchemy.startGraph):"object"==typeof alchemy.conf.dataSource?alchemy.startGraph(alchemy.conf.dataSource):void 0},a}(),b={},"undefined"!=typeof module&&module.exports?module.exports=new a:this.alchemy=new a}).call(this),function(){alchemy.clustering=function(){function a(){var a,b,c,d,e,f;a=alchemy._nodes,b=-500,f=function(b){return a[b.source.id].properties.cluster===a[b.target.id].properties.cluster?1:1},c=function(){return.7},e=function(b){return a=alchemy._nodes,a[b.source.id].properties.root||a[b.target.id].properties.root?300:a[b.source.id].properties.cluster===a[b.target.id].properties.cluster?10:600},d=function(a){return 8*a},this.layout={charge:b,linkStrength:function(a){return f(a)},friction:function(){return c()},linkDistancefn:function(a){return e(a)},gravity:function(a){return d(a)}}}return a.prototype.getClusterColour=function(a){return null!=alchemy.conf.clusterColours[a]?alchemy.conf.clusterColours[a]:"#EBECE4"},a.prototype.edgeGradient=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o;for(c=d3.select(""+alchemy.conf.divSelector+" svg"),b={},j=alchemy._nodes,n=_.map(a,function(a){return a._d3}),l=0,m=n.length;m>l;l++)if(d=n[l],!j[d.source.id].properties.root&&!j[d.target.id].properties.root&&j[d.source.id].properties.cluster!==j[d.target.id].properties.cluster&&j[d.target.id].properties.cluster!==j[d.source.id].properties.cluster){if(h=j[d.source.id].properties.cluster+"-"+j[d.target.id].properties.cluster,h in b)continue;h in b||(k=this.getClusterColour(j[d.target.id].properties.cluster),e=this.getClusterColour(j[d.source.id].properties.cluster),b[h]={startColour:k,endColour:e})}o=[];for(i in b)g="cluster-gradient-"+i,f=c.append("svg:linearGradient").attr("id",g),f.append("svg:stop").attr("offset","0%").attr("stop-color",b[i].startColour),o.push(f.append("svg:stop").attr("offset","100%").attr("stop-color",b[i].endColour));return o},a}()}.call(this),function(){alchemy.controlDash={init:function(){return alchemy.conf.showControlDash===!0?(d3.select(".alchemy").append("div").attr("id","control-dash-wrapper").attr("class","col-md-4 initial"),d3.select("#control-dash-wrapper").append("i").attr("id","dash-toggle").attr("class","fa fa-flask col-md-offset-12"),d3.select("#control-dash-wrapper").append("div").attr("id","control-dash").attr("class","col-md-12"),d3.select("#dash-toggle").on("click",alchemy.interactions.toggleControlDash),alchemy.controlDash.zoomCtrl(),alchemy.controlDash.search(),alchemy.controlDash.filters(),alchemy.controlDash.stats(),alchemy.controlDash.modifyElements()):void 0},search:function(){return alchemy.conf.search?(d3.select("#control-dash").append("div").attr("id","search").html("<div class='input-group'>\n    <input class='form-control' placeholder='Search'>\n    <i class='input-group-addon search-icon'><span class='fa fa-search fa-1x'></span></i>\n</div> "),alchemy.search.init()):void 0},zoomCtrl:function(){return alchemy.conf.zoomControls?(d3.select("#control-dash-wrapper").append("div").attr("id","zoom-controls").attr("class","col-md-offset-12").html("<button id='zoom-reset'  class='btn btn-defualt btn-primary'><i class='fa fa-crosshairs fa-lg'></i></button> <button id='zoom-in'  class='btn btn-defualt btn-primary'><i class='fa fa-plus'></i></button> <button id='zoom-out' class='btn btn-default btn-primary'><i class='fa fa-minus'></i></button>"),d3.select("#zoom-in").on("click",function(){return alchemy.interactions.clickZoom("in")}),d3.select("#zoom-out").on("click",function(){return alchemy.interactions.clickZoom("out")}),d3.select("#zoom-reset").on("click",function(){return alchemy.interactions.clickZoom("reset")})):void 0},filters:function(){return alchemy.conf.showFilters?(d3.select("#control-dash").append("div").attr("id","filters"),alchemy.filters.init()):void 0},stats:function(){var a;return alchemy.conf.showStats?(a='<div id = "stats-header" data-toggle="collapse" data-target="#stats #all-stats">\n<h3>\n    Statistics\n</h3>\n<span class = "fa fa-caret-right fa-2x"></span>\n</div>\n<div id="all-stats" class="collapse">\n    <ul class = "list-group" id="node-stats"></ul>\n    <ul class = "list-group" id="rel-stats"></ul>  \n</div>',d3.select("#control-dash").append("div").attr("id","stats").html(a).select("#stats-header").on("click",function(){return d3.select("#all-stats").classed("in")?d3.select("#stats-header>span").attr("class","fa fa-2x fa-caret-right"):d3.select("#stats-header>span").attr("class","fa fa-2x fa-caret-down")}),alchemy.stats.init()):void 0},modifyElements:function(){var a;return alchemy.conf.showEditor?(a='<div id = "editor-header" data-toggle="collapse" data-target="#editor #element-options">\n     <h3>\n        Editor\n    </h3>\n    <span class = "fa fa-2x fa-caret-right"></span>\n</div>',d3.select("#control-dash").append("div").attr("id","editor").html(a).select("#editor-header").on("click",function(){return d3.select("#element-options").classed("in")?d3.select("#editor-header>span").attr("class","fa fa-2x fa-caret-right"):d3.select("#editor-header>span").attr("class","fa fa-2x fa-caret-down")}),alchemy.modifyElements.init()):void 0}}}.call(this),function(){alchemy.filters={init:function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(alchemy.filters.show(),alchemy.conf.edgeFilters&&alchemy.filters.showEdgeFilters(),alchemy.conf.nodeFilters&&alchemy.filters.showNodeFilters(),alchemy.conf.nodeTypes){for(e=Object.keys(alchemy.conf.nodeTypes),g="",n=alchemy.conf.nodeTypes[e],h=0,k=n.length;k>h;h++)f=n[h],alchemy.state.filters.nodes[""+f]={active:!0},a=f.replace("_"," "),g+="<li class = 'list-group-item nodeType' role = 'menuitem' id='li-"+f+"' name = "+f+">"+a+"</li>";$("#node-dropdown").append(g)}if(alchemy.conf.edgeTypes){for(o=d3.selectAll(".edge")[0],i=0,l=o.length;l>i;i++)b=o[i],currentRelationshipTypes[[b].caption]=!0;for(d="",p=alchemy.conf.edgeTypes,j=0,m=p.length;m>j;j++)c=p[j],alchemy.state.filters.edges[""+c]={active:!0},a=c.replace("_"," "),d+="<li class = 'list-group-item edgeType' role = 'menuitem' id='li-"+c+"' name = "+c+">"+a+"</li>";$("#rel-dropdown").append(d)}return alchemy.conf.captionsToggle&&alchemy.filters.captionsToggle(),alchemy.conf.edgesToggle&&alchemy.filters.edgesToggle(),alchemy.conf.nodesToggle&&alchemy.filters.nodesToggle(),alchemy.filters.update()},show:function(){var a;return a='<div id = "filter-header" data-toggle="collapse" data-target="#filters form">\n    <h3>\n        Filters\n    </h3>\n    <span class = "fa fa-2x fa-caret-right"></span>\n</div>\n    <form class="form-inline collapse">\n    </form>',d3.select("#control-dash #filters").html(a),d3.selectAll("#filter-header").on("click",function(){return d3.select("#filters>form").classed("in")?d3.select("#filter-header>span").attr("class","fa fa-2x fa-caret-right"):d3.select("#filter-header>span").attr("class","fa fa-2x fa-caret-down")}),$("#filters form").submit(!1)},showEdgeFilters:function(){var a;return a='<div id="filter-relationships">\n     <div id="filter-rel-header" data-target = "#rel-dropdown" data-toggle="collapse">\n         <h4>\n             Edge Types\n         </h4>\n         <span class="fa fa-lg fa-caret-right"></span>\n     </div>\n     <ul id="rel-dropdown" class="collapse list-group" role="menu">\n     </ul>\n</div>\n',$("#filters form").append(a),d3.select("#filter-rel-header").on("click",function(){return d3.select("#rel-dropdown").classed("in")?d3.select("#filter-rel-header>span").attr("class","fa fa-lg fa-caret-right"):d3.select("#filter-rel-header>span").attr("class","fa fa-lg fa-caret-down")})},showNodeFilters:function(){var a;return a=' <div id="filter-nodes">\n     <div id="filter-node-header" data-target = "#node-dropdown" data-toggle="collapse">\n         <h4>\n             Node Types\n         </h4>\n         <span class="fa fa-lg fa-caret-right"></span>\n     </div>\n     <ul id="node-dropdown" class="collapse list-group" role="menu">\n     </ul>\n</div>',$("#filters form").append(a),d3.select("#filter-node-header").on("click",function(){return d3.select("#node-dropdown").classed("in")?d3.select("#filter-node-header>span").attr("class","fa fa-lg fa-caret-right"):d3.select("#filter-node-header>span").attr("class","fa fa-lg fa-caret-down")})},captionsToggle:function(){return d3.select("#filters form").append("li").attr({id:"toggle-captions","class":"list-group-item active-label toggle"}).html("Show Captions").on("click",function(){var a;return a=d3.select("g text").attr("style"),"display: block"===a?d3.selectAll("g text").attr("style","display: none"):d3.selectAll("g text").attr("style","display: block")})},edgesToggle:function(){return d3.select("#filters form").append("li").attr({id:"toggle-edges","class":"list-group-item active-label toggle"}).html("Toggle Edges").on("click",function(){return 0===d3.selectAll(".edge.hidden")[0].length?d3.selectAll(".edge").classed("hidden",!0):d3.selectAll(".edge").classed("hidden",!1)})},nodesToggle:function(){return d3.select("#filters form").append("li").attr({id:"toggle-nodes","class":"list-group-item active-label toggle"}).html("Toggle Nodes").on("click",function(){var a;return a=alchemy.conf.toggleRootNodes?".node,.edge":".node:not(.root),.edge",0===d3.selectAll(".node.hidden")[0].length?d3.selectAll(a).classed("hidden",!0):d3.selectAll(a).classed("hidden",!1)})},update:function(){var a,b;return a=function(a){var b,c,d;return d=a.attr("name"),c=!a.classed("disabled"),b=a.classed("nodeType")?"nodes":"edges",[d,b,c]},b=function(a,b,c,d){var e,f,g,h,i,j,k,l,m,n;if("object"!=typeof a){if(g=d3.selectAll("."+a),g.classed({inactive:c,highlight:d}),"nodes"===b)for(m=g.data(),i=0,k=m.length;k>i;i++)for(h=m[i],n=alchemy._nodes[h.id].adjacentEdges,j=0,l=n.length;l>j;j++)e=n[j],f=alchemy._edges[e],f.allNodesActive()||(c=!0),d3.select("[source-target='"+e+"']").classed({inactive:c,highlight:d});return"edges"===b&&g.classed({inactive:function(a){var b;return b=alchemy._edges[a.id].allNodesActive(),c||!b}}),alchemy.stats.update()}},d3.selectAll(".nodeType, .edgeType").on("mouseenter",function(){var b,c,d,e,f;return b=d3.select(this),f=a(b),e=f[0],c=f[1],d=f[2],d3.selectAll("."+e).classed("highlight",!0)}).on("mouseleave",function(){var b,c,d,e,f;return b=d3.select(this),f=a(b),e=f[0],c=f[1],d=f[2],d3.selectAll("."+e).classed("highlight",!1)}).on("click",function(){var c,d,e,f,g,h;return c=d3.select(this),h=a(c),g=h[0],d=h[1],f=h[2],e=!1,c.classed({disabled:f}),b(g,d,f,e)})}}}.call(this),function(){alchemy.interactions={edgeClick:function(a){var b;return b=alchemy.vis,b.selectAll(".edge").classed("highlight",!1),d3.select("[source-target='"+a.id+"']").classed("highlight",!0),d3.event.stopPropagation(),"function"==typeof(null!=alchemy.conf.edgeClick)?alchemy.conf.edgeClick():void 0},nodeMouseOver:function(a){var b;return null==alchemy.conf.nodeMouseOver?null:(b=alchemy._nodes[a.id],"function"==typeof alchemy.conf.nodeMouseOver?alchemy.conf.nodeMouseOver(b):"number"==typeof alchemy.conf.nodeMouseOver?b.properties[alchemy.conf.nodeMouseOver]:void 0)},nodeMouseOut:function(a){return null!=alchemy.conf.nodeMouseOut&&"function"==typeof alchemy.conf.nodeMouseOut?alchemy.conf.nodeMouseOut(a):null},nodeMouseUp:function(){},nodeDoubleClick:function(a){var b,c,d;if(d3.event.stopPropagation(),alchemy.conf.extraDataSource&&!a.expanded&&!alchemy.conf.unexpandable.indexOf(a.type===!1)){$('<div id="loading-spi"></div>nner').show(),console.log("loading more data for "+a.id),a.expanded=!0,d3.json(alchemy.conf.extraDataSource+a.id,loadMoreNodes),c=findAllEdges(a),d=[];for(b in edges)d.push(edges[b].distance*=2);return d}},nodeClick:function(a){var b;d3.event.stopPropagation(),alchemy.vis.select("#node-"+a.id).empty()||(b=alchemy.vis.select("#node-"+a.id).classed("selected"),alchemy.vis.select("#node-"+a.id).classed("selected",!b)),"function"==typeof alchemy.conf.nodeClick&&alchemy.conf.nodeClick(a)},zoom:function(a){return null==this._zoomBehavior&&(this._zoomBehavior=d3.behavior.zoom()),this._zoomBehavior.scaleExtent(a).on("zoom",function(){return alchemy.vis.attr("transform","translate("+d3.event.translate+") scale("+d3.event.scale+")")})},clickZoom:function(a){var b,c,d,e;return e=alchemy.vis.attr("transform").match(/(-*\d+\.*\d*)/g).map(function(a){return parseFloat(a)}),c=e[0],d=e[1],b=e[2],alchemy.vis.attr("transform",function(){return"in"===a?(b<alchemy.conf.scaleExtent[1]&&(b+=.2),"translate("+c+","+d+") scale("+b+")"):"out"===a?(b>alchemy.conf.scaleExtent[0]&&(b-=.2),"translate("+c+","+d+") scale("+b+")"):"reset"===a?"translate(0,0) scale(1)":console.log("error")}),null==this._zoomBehavior&&(this._zoomBehavior=d3.behavior.zoom()),this._zoomBehavior.scale(b).translate([c,d])},toggleControlDash:function(){var a;return a=d3.select("#control-dash-wrapper").classed("off-canvas")||d3.select("#control-dash-wrapper").classed("initial"),d3.select("#control-dash-wrapper").classed({"off-canvas":!a,initial:!1,"on-canvas":a})},nodeDragStarted:function(a){return d3.event.sourceEvent.stopPropagation(),d3.select(this).classed("dragging",!0),a.fixed=!0},nodeDragged:function(a){var b,c,d,e,f,g,h,i;for(a.x+=d3.event.dx,a.y+=d3.event.dy,a.px+=d3.event.dx,a.py+=d3.event.dy,e=d3.select(this),e.attr("transform","translate("+a.x+", "+a.y+")"),c=alchemy._nodes[e.datum().id].adjacentEdges,b=new alchemy.drawing.DrawEdges,i=[],g=0,h=c.length;h>g;g++)d=c[g],f=d3.select("g.edge[source-target='"+d+"']"),i.push(b.updateEdge(f));return i},nodeDragended:function(){return d3.select(this).classed({dragging:!1}),alchemy.conf.forceLocked?void 0:alchemy.force.start()}}}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.Layout=function(){function b(){this.linkDistancefn=a(this.linkDistancefn,this),this.tick=a(this.tick,this),this.collide=a(this.collide,this),this.linkStrength=a(this.linkStrength,this),this.gravity=a(this.gravity,this);var b,c;b=alchemy.conf,c=alchemy._nodes,this.k=Math.sqrt(Math.log(_.size(alchemy._nodes))/(b.graphWidth()*b.graphHeight())),this._clustering=new alchemy.clustering,b.cluster?(this._charge=function(){return this._clustering.layout.charge},this._linkStrength=function(a){return this._clustering.layout.linkStrength(a)}):(this._charge=function(){return-10/this.k},this._linkStrength=function(a){return c[a.source.id].properties.root||c[a.target.id].properties.root?1:.9}),b.cluster?this._linkDistancefn=function(a){return this._clustering.layout.linkDistancefn(a)}:"default"===b.linkDistancefn?this._linkDistancefn=function(){return 1/(50*this.k)}:"number"==typeof b.linkDistancefn?this._linkDistancefn=function(){return b.linkDistancefn}:"function"==typeof b.linkDistancefn&&(this._linkDistancefn=function(a){return b.linkDistancefn(a)})}return b.prototype.gravity=function(){return alchemy.conf.cluster?this._clustering.layout.gravity(this.k):50*this.k},b.prototype.linkStrength=function(a){return this._linkStrength(a)},b.prototype.friction=function(){return alchemy.conf.cluster?.7:.9},b.prototype.collide=function(a){var b,c,d,e,f,g;return a=a._d3,b=alchemy.conf,g=2*(a.r+a["stroke-width"])+b.nodeOverlap,c=a.x-g,d=a.x+g,e=a.y-g,f=a.y+g,function(b,h,i,j,k){var l,m,n;return b.point&&b.point!==a&&(m=a.x-Math.abs(b.point.x),n=a.y-b.point.y,l=Math.sqrt(m*m+n*n),g=g,g>l&&(l=(l-g)/l*alchemy.conf.alpha,a.x-=m*=l,a.y-=n*=l,b.point.x+=m,b.point.y+=n)),h>d||c>j||i>f||e>k}},b.prototype.tick=function(){var a,b,c,d,e;if(alchemy.conf.collisionDetection)for(b=d3.geom.quadtree(_.map(alchemy._nodes,function(a){return a._d3})),e=_.values(alchemy._nodes),c=0,d=e.length;d>c;c++)a=e[c],b.visit(this.collide(a));return alchemy.node.attr("transform",function(a){return"translate("+a.x+","+a.y+")"}),null==this.drawEdge&&(this.drawEdge=new alchemy.drawing.DrawEdge),this.drawEdge.styleText(alchemy.edge),this.drawEdge.styleLink(alchemy.edge)},b.prototype.positionRootNodes=function(){var a,b,c,d,e,f,g,h,i,j;if(a=alchemy.conf,b={width:a.graphWidth(),height:a.graphHeight()},e=_.filter(alchemy._nodes,function(a){return a.properties.root}),1!==e.length){for(d=0,j=[],f=0,g=e.length;g>f;f++)c=e[f],d++,c._d3.x=b.width/Math.sqrt(e.length*d),c._d3.y=b.height/2,j.push(c._d3.fixed=!0);return j}c=e[0],h=[b.width/2,b.width/2],c._d3.x=h[0],c._d3.px=h[1],i=[b.height/2,b.height/2],c._d3.y=i[0],c._d3.py=i[1],c._d3.fixed=!0},b.prototype.chargeDistance=function(){return 500},b.prototype.linkDistancefn=function(a){return this._linkDistancefn(a)},b.prototype.charge=function(){return this._charge()},b}()}.call(this),function(){alchemy.modifyElements={init:function(){return alchemy.conf.showEditor===!0?(alchemy.modifyElements.showOptions(),alchemy.modifyElements.nodeEditorInit()):void 0},showOptions:function(){var a;return a='<ul class="list-group"> \n<li class="list-group-item" id="remove">Remove Selected</li> \n</ul>',d3.select("#editor").append("div").attr("id","element-options").attr("class","collapse").html(a),d3.select("#element-options ul").append("li").attr("class",function(){return alchemy.conf.editorInteractions===!0?"active list-group-item":"inactive list-group-item"}).attr("id","editor-interactions").html(function(){return alchemy.conf.editorInteractions===!0?"Disable Editor Interactions":"Enable Editor Interactions"}),d3.select("#remove").on("click",function(){return alchemy.editor.remove()}),d3.select("#editor-interactions").on("click",function(){return d3.select("#editor-interactions").classed("active")?(alchemy.editor.disableEditor(),d3.select("#editor-interactions").classed({active:!1,inactive:!0}).html("Editor mode disabled, click to enable editor interactions")):(alchemy.editor.enableEditor(),d3.select("#editor-interactions").classed({active:!0,inactive:!1}).html("Editor mode enabled, click to disable editor interactions"))})},nodeEditorInit:function(){var a;return a="<div id=\"add-property\">\n    <input class='form-control' id='node-add-prop-key' placeholder=\"Property Name\"></input>\n    <input class='form-control' id='node-add-prop-value' placeholder=\"Property Value\"></input>\n</div>",d3.select("#element-options").append("div").attr("id","node-editor").attr("class",function(){return d3.select("#editor-interactions").classed("active")?"enabled":"hidden"}).html("<h4>Node Editor</h4>"),d3.select("#node-editor").append("form").attr("id","node-add-property").html(a),d3.select("#node-add-property").append("input").attr("id","node-add-prop-submit").attr("type","submit").attr("value","Add Property"),d3.select("#node-add-property").on("submit",function(){return event.preventDefault(),d3.select(".node.selected").empty()?d3.selectAll("#node-add-prop-value, #node-add-prop-key").attr("placeholder","select a node first"):void 0})},nodeEditor:function(a){var b,c,d,e;d3.select("#node-editor").append("form").attr("id","node-properties-list"),d3.selectAll("#node-add-prop-key").attr("placeholder","New Property Name").attr("value",null),d3.selectAll("#node-add-prop-value").attr("placeholder","New Property Value").attr("value",null),b=alchemy._nodes[a.id].getProperties(),d3.select("#node-"+a.id).classed({editing:!0});for(c in b)e=b[c],d3.select("#node-properties-list").append("div").attr("id","node-"+c).attr("class","node-property form-inline form-group").append("label").attr("for","node-"+c+"-input").attr("class","form-control property-name").text(""+c),d3.select("#node-"+c).append("input").attr("id","node-"+c+"-input").attr("class","form-control property-value").attr("placeholder",""+e);return d3.select("#node-properties-list").append("input").attr("id","update-properties").attr("type","submit").attr("value","Update Properties"),d3.selectAll("#node-add-prop-key, #node-add-prop-value, .node-property").on("keydown",function(){return 13===d3.event.keyCode&&event.preventDefault(),d3.select(this).classed({"edited-property":!0})}),d3.select("#node-add-property").on("submit",function(){var a,b;return event.preventDefault(),a=d3.select("#node-add-prop-key")[0][0].value,a=a.replace(/\s/g,"_"),b=d3.select("#node-add-prop-value")[0][0].value,d(a,b,!0),d3.selectAll("#add-property .edited-property").classed({"edited-property":!1}),this.reset()}),d3.select("#node-properties-list").on("submit",function(){var a,b,e,f,g,h;for(event.preventDefault(),b=d3.selectAll(".edited-property"),h=b[0],f=0,g=h.length;g>f;f++)c=h[f],console.log(c),a=d3.select(c).select("label").text(),e=d3.select(c).select("input")[0][0].value,d(a,e,!1);return d3.selectAll("#node-properties-list .edited-property").classed({"edited-property":!1}),this.reset()}),d=function(b,c,d){var e,f;return f=a.id,""!==b&&""!==c?(alchemy._nodes[f].setProperty(""+b,""+c),e=new alchemy.drawing.DrawNodes,e.updateNode(d3.select("#node-"+f)),d===!0?(d3.select("#node-add-prop-key").attr("placeholder","property added/updated to key: "+b),d3.select("#node-add-prop-value").attr("placeholder","property at "+b+" updated to: "+c)):d3.select("#node-"+b+"-input").attr("placeholder","property at "+b+" updated to: "+c)):d===!0?(d3.select("#node-add-prop-key").attr("placeholder","null or invalid input"),d3.select("#node-add-prop-value").attr("placeholder","null or invlid input")):d3.select("#node-"+b+"-input").attr("placeholder","null or invalid input")}},nodeEditorClear:function(){return d3.selectAll(".node").classed({editing:!1}),d3.select("#node-properties-list").remove(),d3.select("#node-add-prop-submit").attr("placeholder",function(){return d3.selectAll(".node.selected").empty()?"select a node to edit properties":"add a property to this node"})}},alchemy.editor={enableEditor:function(){var a;return alchemy.setState("interactions","editor"),a=alchemy.vis.append("line").attr("id","dragline"),d3.select("#node-editor").attr("class","enabled").style("opacity",1),this.drawNodes.updateNode(alchemy.node),d3.selectAll(".node").classed({selected:!1})},disableEditor:function(){return alchemy.setState("interactions","default"),alchemy.vis.select("#dragline").remove(),d3.select("#node-editor").transition().duration(300).style("opacity",0),d3.select("#node-editor").transition().delay(300).attr("class","hidden"),this.drawNodes.updateNode(alchemy.node),d3.selectAll(".node").classed({selected:!1})},remove:function(){var a,b,c,d,e,f,g,h,i,j,k,l;for(e=d3.selectAll(".selected.node"),j=e[0],l=[],f=0,h=j.length;h>f;f++)if(b=j[f],c=d3.select(b).data()[0].id,d=alchemy._nodes[c],null!=d){for(k=d.adjacentEdges,g=0,i=k.length;i>g;g++)a=k[g],alchemy._edges=_.omit(alchemy._edges,""+a),alchemy.edge=alchemy.edge.data(_.map(alchemy._edges,function(a){return a._d3}),function(a){return a.id}),d3.select("#edge-"+a).remove();alchemy._nodes=_.omit(alchemy._nodes,""+c),alchemy.node=alchemy.node.data(_.map(alchemy._nodes,function(a){return a._d3}),function(a){return a.id}),d3.select(b).remove(),l.push("editor"===alchemy.getState("interactions")?alchemy.modifyElements.nodeEditorClear():void 0)}else l.push(void 0);return l},addNode:function(a){var b;return b=alchemy._nodes[a.id]=new alchemy.models.Node({id:""+a.id}),b.setProperty("caption",a.caption),b.setD3Property("x",a.x),b.setD3Property("y",a.y),alchemy.node=alchemy.node.data(_.map(alchemy._nodes,function(a){return a._d3}),function(a){return a.id})},addEdge:function(a){var b;return b=alchemy._edges[a.id]=new alchemy.models.Edge(a),alchemy.edge=alchemy.edge.data(_.map(alchemy._edges,function(a){return a._d3}),function(a){return a.id})},update:function(a,b){return this.mouseUpNode?(alchemy.editor.addEdge(b),this.drawEdges.createEdge(alchemy.edge)):(alchemy.editor.addNode(a),alchemy.editor.addEdge(b),this.drawEdges.createEdge(alchemy.edge),this.drawNodes.createNode(alchemy.node)),alchemy.layout.tick()}},alchemy.editor.interactions=function(){return this.mouseUpNode=null,this.sourceNode=null,this.targetNode=null,this.newEdge=null,this.click=null,this.drawNodes=new alchemy.drawing.DrawNodes,this.drawEdges=new alchemy.drawing.DrawEdges,this.nodeMouseOver=function(){var a;return d3.select(this).select("circle").empty()||(a=d3.select(this).select("circle").attr("r"),d3.select(this).select("circle").attr("r",3*a)),this},this.nodeMouseUp=function(a){return function(b){return a.sourceNode!==b?(a.mouseUpNode=!0,a.targetNode=b,a.click=!1):a.click=!0,a}}(this),this.nodeMouseOut=function(){var a;return d3.select(this).select("circle").empty()||(a=d3.select(this).select("circle").attr("r"),d3.select(this).select("circle").attr("r",a/3)),this},this.nodeClick=function(a){return function(b){var c;return d3.event.stopPropagation(),alchemy.vis.select("#node-"+b.id).empty()||(c=alchemy.vis.select("#node-"+b.id).classed("selected"),alchemy.vis.select("#node-"+b.id).classed("selected",!c)),alchemy.modifyElements.nodeEditorClear(),alchemy.modifyElements.nodeEditor(b),a}}(this),this.addNodeStart=function(a){return function(b){return d3.event.sourceEvent.stopPropagation(),a.sourceNode=b,d3.select("#dragline").classed({hidden:!1}),a}}(this),this.addNodeDragging=function(a){return function(){var b,c;return b=d3.event.x,c=d3.event.y,d3.select("#dragline").attr("x1",a.sourceNode.x).attr("y1",a.sourceNode.y).attr("x2",b).attr("y2",c).attr("style","stroke: #FFF"),a}}(this),this.addNodeDragended=function(a){return function(){var b,c,d;return a.click||(a.mouseUpNode||(b=d3.select("#dragline"),c=b.attr("x2"),d=b.attr("y2"),a.targetNode={id:""+_.uniqueId("addedNode_"),x:parseFloat(c),y:parseFloat(d),caption:"node added"}),a.newEdge={id:""+a.sourceNode.id+"-"+a.targetNode.id,source:a.sourceNode.id,target:a.targetNode.id,caption:"edited"},alchemy.editor.update(a.targetNode,a.newEdge)),alchemy.editor.interactions().reset(),a}}(this),this.deleteSelected=function(){return function(){switch(d3.event.keyCode){case 8:case 46:if("INPUT"!==d3.select(d3.event.target).node().tagName)return d3.event.preventDefault(),alchemy.editor.remove()}}}(this),this.reset=function(a){return function(){return a.mouseUpNode=null,a.sourceNode=null,a.targetNode=null,a.newEdge=null,a.click=null,d3.select("#dragline").classed({hidden:!0}).attr("x1",0).attr("y1",0).attr("x2",0).attr("y2",0),a}}(this),this}}.call(this),function(){alchemy.search={init:function(){var a;return a=d3.select("#search input"),a.on("keyup",function(){var b;return b=a[0][0].value.toLowerCase(),d3.selectAll(".node").classed("inactive",!1),d3.selectAll("text").attr("style",function(){return""!==b?"display: inline;":void 0}),d3.selectAll(".node").classed("inactive",function(a){var c,d;return c=d3.select(this),"contains"===alchemy.conf.searchMethod&&(d=c.text().toLowerCase().indexOf(b)<0),"begins"===alchemy.conf.searchMethod&&(d=0!==c.text().toLowerCase().indexOf(b)),d?d3.selectAll("[source-target*='"+a.id+"']").classed("inactive",d):d3.selectAll("[source-target*='"+a.id+"']").classed("inactive",function(a){var b,c,d;return b=[a.source.id,a.target.id],c=d3.select("#node-"+b[0]).classed("inactive"),d=d3.select("#node-"+b[1]).classed("inactive"),d||c}),d})})}}}.call(this),function(){alchemy.startGraph=function(a){var b,c,d,e;return c=alchemy.conf,d3.select(c.divSelector).empty()&&console.warn(alchemy.utils.warnings.divWarning()),a||alchemy.utils.warnings.dataWarning(),alchemy._nodes={},alchemy._edges={},a.nodes.forEach(function(a){return alchemy._nodes[a.id]=new alchemy.models.Node(a)}),a.edges.forEach(function(a){var b;return b=new alchemy.models.Edge(a),alchemy._edges[b.id]=b}),alchemy.vis=d3.select(c.divSelector).attr("style","width:"+c.graphWidth()+"px; height:"+c.graphHeight()+"px").append("svg").attr("xmlns","http://www.w3.org/2000/svg").attr("pointer-events","all").on("dblclick.zoom",null).on("click",alchemy.utils.deselectAll).call(alchemy.interactions.zoom(c.scaleExtent)).append("g").attr("transform","translate("+c.initialTranslate+") scale("+c.initialScale+")"),d3.select("body").on("keydown",alchemy.editor.interactions().deleteSelected),alchemy.layout=new alchemy.Layout,alchemy.force=d3.layout.force().size([c.graphWidth(),c.graphHeight()]).nodes(_.map(alchemy._nodes,function(a){return a._d3})).links(_.map(alchemy._edges,function(a){return a._d3})),alchemy.force.charge(alchemy.layout.charge()).linkDistance(function(a){return alchemy.layout.linkDistancefn(a)}).theta(1).gravity(alchemy.layout.gravity()).linkStrength(function(a){return alchemy.layout.linkStrength(a)}).friction(alchemy.layout.friction()).chargeDistance(alchemy.layout.chargeDistance()).on("tick",alchemy.layout.tick),alchemy.updateGraph(),alchemy.controlDash.init(),c.forceLocked||alchemy.force.on("tick",alchemy.layout.tick).start(),null!=c.afterLoad&&("function"==typeof c.afterLoad?c.afterLoad():"string"==typeof c.afterLoad&&(alchemy[c.afterLoad]=!0)),c.initialScale!==alchemy.defaults.initialScale?void alchemy.interactions.zoom().scale(c.initialScale):c.initialTranslate!==alchemy.defaults.initialTranslate?void alchemy.interactions.zoom().translate(c.initialTranslate):((c.cluster||c.directedEdges)&&(d=d3.select(""+alchemy.conf.divSelector+" svg").append("svg:defs")),c.directedEdges?(b=c.edgeArrowSize,e=d.append("svg:marker").attr("id","arrow").attr("viewBox","0 -"+.4*b+" "+b+" "+b).attr("markerUnits","userSpaceOnUse").attr("markerWidth",b).attr("markerHeight",b).attr("orient","auto"),e.append("svg:path").attr("d","M "+b+",0 L 0,"+.4*b+" L 0,-"+.4*b),c.curvedEdges?e.attr("refX",b+1):e.attr("refX",1)):void 0)}}.call(this),function(){alchemy.stats={init:function(){return alchemy.stats.update()},nodeStats:function(){var a,b,c,d,e,f,g,h,i,j,k,l;if(g="",f=d3.selectAll(".node")[0].length,a=d3.selectAll(".node.active")[0].length,c=d3.selectAll(".node.inactive")[0].length,g+="<li class = 'list-group-item gen_node_stat'>Number of nodes: <span class='badge'>"+f+"</span></li>",g+="<li class = 'list-group-item gen_node_stat'>Number of active nodes: <span class='badge'>"+a+"</span></li>",g+="<li class = 'list-group-item gen_node_stat'>Number of inactive nodes: <span class='badge'>"+c+"</span></li>",alchemy.conf.nodeTypes){for(e=Object.keys(alchemy.conf.nodeTypes),i="",l=alchemy.conf.nodeTypes[e],j=0,k=l.length;k>j;j++)h=l[j],b=h.replace("_"," "),f=d3.selectAll("g.node."+h)[0].length,i+="<li class = 'list-group-item nodeType' id='li-"+h+"' name = "+b+">Number of nodes of type "+b+": <span class='badge'>"+f+"</span></li>";g+=i}return d="<li id='node-stats-graph' class='list-group-item'></li>",g+=d,$("#node-stats").html(g)},edgeStats:function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n;if(d=null,f=d3.selectAll(".edge")[0].length,a=d3.selectAll(".edge.active")[0].length,h=d3.selectAll(".edge.inactive")[0].length,e="<li class = 'list-group-item gen_edge_stat'>Number of relationships: <span class='badge'>"+f+"</span></li> <li class = 'list-group-item gen_edge_stat'>Number of active relationships: <span class='badge'>"+a+"</span></li> <li class = 'list-group-item gen_edge_stat'>Number of inactive relationships: <span class='badge'>"+h+"</span></li> <li id='edge-stats-graph' class='list-group-item'></li>",alchemy.conf.edgeTypes){for(d=[],m=d3.selectAll(".edge")[0],i=0,k=m.length;k>i;i++)c=m[i],currentRelationshipTypes[[c].caption]=!0;
for(n=alchemy.conf.edgeTypes,j=0,l=n.length;l>j;j++)g=n[j],g&&(b=g.replace("_"," "),f=d3.selectAll(".edge."+g)[0].length,d.push([""+b,f]))}return $("#rel-stats").html(e),alchemy.stats.insertSVG("edge",d),d},nodeStats:function(){var a,b,c,d,e,f,g,h,i,j,k;if(c=null,h=d3.selectAll(".node")[0].length,a=d3.selectAll(".node.active")[0].length,b=d3.selectAll(".node.inactive")[0].length,alchemy.conf.nodeTypes)for(c=[],e=Object.keys(alchemy.conf.nodeTypes),k=alchemy.conf.nodeTypes[e],i=0,j=k.length;j>i;i++)g=k[i],f=d3.selectAll("g.node."+g)[0].length,c.push([""+g,f]);return d="<li class = 'list-group-item gen_node_stat'>Number of nodes: <span class='badge'>"+h+"</span></li> <li class = 'list-group-item gen_node_stat'>Number of active nodes: <span class='badge'>"+a+"</span></li> <li class = 'list-group-item gen_node_stat'>Number of inactive nodes: <span class='badge'>"+b+"</span></li> <li id='node-stats-graph' class='list-group-item'></li>",$("#node-stats").html(d),alchemy.stats.insertSVG("node",c),c},insertSVG:function(a,b){var c,d,e,f,g,h,i,j;return null===b?d3.select("#"+a+"-stats-graph").html("<br><h4 class='no-data'>There are no "+a+"Types listed in your conf.</h4>"):(j=.25*alchemy.conf.graphWidth(),f=250,h=j/4,e=d3.scale.category20(),c=d3.svg.arc().outerRadius(h-10).innerRadius(h/2),g=d3.layout.pie().sort(null).value(function(a){return a[1]}),i=d3.select("#"+a+"-stats-graph").append("svg").append("g").style({width:j,height:f}).attr("transform","translate("+j/2+","+f/2+")"),d=i.selectAll(".arc").data(g(b)).enter().append("g").classed("arc",!0).on("mouseover",function(a,c){return d3.select("#"+b[c][0]+"-stat").classed("hidden",!1)}).on("mouseout",function(a,c){return d3.select("#"+b[c][0]+"-stat").classed("hidden",!0)}),d.append("path").attr("d",c).attr("stroke",function(a,b){return e(b)}).attr("stroke-width",2).attr("fill-opacity","0.3"),d.append("text").attr("transform",function(a){return"translate("+c.centroid(a)+")"}).attr("id",function(a,c){return""+b[c][0]+"-stat"}).attr("dy",".35em").classed("hidden",!0).text(function(a,c){return b[c][0]}))},update:function(){return alchemy.conf.nodeStats===!0&&alchemy.stats.nodeStats(),alchemy.conf.edgeStats===!0?alchemy.stats.edgeStats():void 0}}}.call(this),function(){alchemy.updateGraph=function(a){var b,c,d,e;if(null==a&&(a=!0),alchemy.edge=alchemy.vis.selectAll("g.edge").data(_.map(alchemy._edges,function(a){return a._d3}),function(a){return a.id}),alchemy.node=alchemy.vis.selectAll("g.node").data(_.map(alchemy._nodes,function(a){return a._d3}),function(a){return a.id}),a){for(alchemy.layout.positionRootNodes(),this.force.start();this.force.alpha()>.005;)alchemy.force.tick();e=!0,console.log(Date()+" completed initial computation")}return alchemy.conf.cluster&&(b=new alchemy.clustering,b.edgeGradient(alchemy._edges)),c=new alchemy.drawing.DrawEdges,c.createEdge(alchemy.edge),d=new alchemy.drawing.DrawNodes,d.createNode(alchemy.node),alchemy.vis.selectAll("g.node").attr("transform",function(a){return"translate("+a.x+", "+a.y+")"}),alchemy.vis.selectAll(".node text").html(function(a){return function(b){return a.utils.nodeText(b)}}(this)),alchemy.node.exit().remove()}}.call(this),function(){alchemy.defaults={graphWidth:function(){return d3.select(this.divSelector).node().parentElement.clientWidth},graphHeight:function(){return"BODY"===d3.select(this.divSelector).node().parentElement.nodeName?window.innerHeight:d3.select(this.divSelector).node().parentElement.clientHeight},alpha:.5,cluster:!1,clusterColours:d3.shuffle(["#DD79FF","#FFFC00","#00FF30","#5168FF","#00C0FF","#FF004B","#00CDCD","#f83f00","#f800df","#ff8d8f","#ffcd00","#184fff","#ff7e00"]),collisionDetection:!0,nodeOverlap:25,fixNodes:!1,fixRootNodes:!1,forceLocked:!0,linkDistancefn:"default",nodePositions:null,showEditor:!1,captionToggle:!1,toggleRootNodes:!1,removeElement:!1,showControlDash:!1,showStats:!1,nodeStats:!1,edgeStats:!1,showFilters:!1,edgeFilters:!1,nodeFilters:!1,edgesToggle:!1,nodesToggle:!1,zoomControls:!1,nodeCaption:"caption",nodeStyle:{},nodeColour:null,nodeMouseOver:"caption",nodeRadius:10,nodeTypes:null,rootNodes:"root",rootNodeRadius:15,edgeCaption:"caption",edgeClick:"default",edgeStyle:function(){return null},edgeTypes:null,curvedEdges:!1,edgeWidth:4,edgeOverlayWidth:20,directedEdges:!1,edgeArrowSize:5,search:!0,searchMethod:"contains",afterLoad:"afterLoad",divSelector:"#alchemy",dataSource:null,initialScale:1,initialTranslate:[0,0],scaleExtent:[.5,2.4],dataWarning:"default",warningMessage:"There be no data!  What's going on?"}}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.drawing.DrawEdge=function(){function b(){this.styleText=a(this.styleText,this),this.classEdge=a(this.classEdge,this),this.styleLink=a(this.styleLink,this),this.createLink=a(this.createLink,this);var b;b=alchemy.conf,this.curved=b.curvedEdges,this.directed=b.directedEdges,this.utils=new alchemy.drawing.EdgeUtils}return b.prototype.createLink=function(a){var b,c,d;return d=this.utils,b=alchemy.conf,c=alchemy.interactions,this.curved?(a.append("path").attr("class","edge-line").attr("id",function(a){return"path-"+a.id}),a.filter(function(a){return null!=a.caption}).append("text"),a.append("path").attr("class","edge-handler").style("stroke-width",""+b.edgeOverlayWidth).on("click",alchemy.interactions.edgeClick)):(a.append("line").attr("class","edge-line").attr("shape-rendering","optimizeSpeed").style("stroke",function(a){return d.edgeStyle(a)}).style("stroke-width",b.edgeWidth),a.filter(function(a){return null!=a.caption}).append("text"),a.append("rect").attr("class","edge-handler").on("click",alchemy.interactions.edgeClick))},b.prototype.styleLink=function(a){var b,c;return c=this.utils,b=alchemy.conf,this.curved?(a.selectAll("path").attr("d",function(a){var b,d,e,f,g,h,i,j,k;return i=c.startLine(a),e=c.endLine(a),g=i.x,h=i.y,j=e.x,k=e.y,b=j-g,d=k-h,f=Math.sqrt(b*b+d*d),"M "+g+","+h+" A "+f+", "+f+" "+c.captionAngle(a)+" 0, 1 "+j+", "+k}),a.select("path.edge-line").style("stroke",function(a){return c.edgeStyle(a)})):(a.select(".edge-line").each(function(a){var b,d;return d=c.startLine(a),b=c.endLine(a),d3.select(this).attr({x1:d.x,y1:d.y,x2:b.x,y2:b.y})}),a.select(".edge-handler").attr("x",0).attr("y",-b.edgeOverlayWidth/2).attr("height",b.edgeOverlayWidth).attr("width",function(a){return c.edgeLength(a)}).attr("transform",function(a){return"translate("+a.source.x+", "+a.source.y+") rotate("+c.edgeAngle(a)+")"})),this.directed?a.select(".edge-line").attr("marker-end","url(#arrow)"):void 0},b.prototype.classEdge=function(a){return a.classed("active",!0)},b.prototype.styleText=function(a){var b;return b=this.utils,this.curved?a.select("text").attr("dx",function(a){return b.middlePath(a).x}).attr("dy",function(a){return b.middlePath(a).y+20}).attr("transform",function(a){return"rotate("+b.captionAngle(a)+" "+b.middlePath(a).x+" "+b.middlePath(a).y+")"}).text(function(a){return a.caption}):a.select("text").attr("dx",function(a){return b.middleLine(a).x}).attr("dy",function(a){return b.middleLine(a).y-5}).attr("transform",function(a){return"rotate("+b.captionAngle(a)+" "+b.middleLine(a).x+" "+b.middleLine(a).y+")"}).text(function(a){return a.caption})},b}()}.call(this),function(){alchemy.drawing.DrawEdges=function(){function a(){this.drawEdge=new alchemy.drawing.DrawEdge}return a.prototype.createEdge=function(a){return a.enter().append("g").attr("id",function(a){return"edge-"+a.id}).attr("class",function(a){var b;return b=alchemy._edges[a.id].properties.caption,"edge "+b}).attr("source-target",function(a){return""+a.source.id+"-"+a.target.id}),this.drawEdge.createLink(a),this.drawEdge.classEdge(a),this.drawEdge.styleLink(a),this.drawEdge.styleText(a),a.exit().remove()},a.prototype.updateEdge=function(a){return this.drawEdge.classEdge(a),this.drawEdge.styleLink(a),this.drawEdge.styleText(a)},a}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.drawing.DrawNode=function(){function b(){this.styleNode=a(this.styleNode,this),this.setInteractions=a(this.setInteractions,this),this.createNode=a(this.createNode,this),this.styleText=a(this.styleText,this);var b,c,d,e;e=new alchemy.drawing.NodeUtils,c=alchemy.interactions,b=alchemy.conf,d=alchemy._nodes,c=alchemy.interactions,this._styleText=function(a){return a.selectAll("text").attr("dy",function(a){return d[a.id].properties.root?b.rootNodeRadius/2:2*b.nodeRadius-5}).html(function(a){return alchemy.utils.nodeText(a)})},this._createNode=function(a){return a.append("circle").attr("id",function(a){return"circle-"+a.id}),a.append("svg:text").attr("id",function(a){return"text-"+a.id})},this._styleNode=function(a){return a.select("circle").attr("r",function(a){return a.r}).attr("shape-rendering","optimizeSpeed").attr("style",function(a){return e.nodeStyle(a)})},this._setInteractions=function(a){var d,e,f,g,h;return f="editor"===alchemy.getState("interactions"),e=alchemy.editor.interactions(),c=alchemy.interactions,d=d3.behavior.drag().origin(Object).on("dragstart",null).on("drag",null).on("dragend",null),f?(a.on("mouseup",e.nodeMouseUp).on("mouseover",e.nodeMouseOver).on("mouseout",e.nodeMouseOut).on("dblclick",c.nodeDoubleClick).on("click",e.nodeClick),d=d3.behavior.drag().origin(Object).on("dragstart",e.addNodeStart).on("drag",e.addNodeDragging).on("dragend",e.addNodeDragended),a.call(d)):(a.on("mouseup",null).on("mouseover",c.nodeMouseOver).on("mouseout",c.nodeMouseOut).on("dblclick",c.nodeDoubleClick).on("click",c.nodeClick),d=d3.behavior.drag().origin(Object).on("dragstart",c.nodeDragStarted).on("drag",c.nodeDragged).on("dragend",c.nodeDragended),b.fixNodes||(g=a.filter(function(a){return a.root!==!0}),g.call(d)),b.fixRootNodes?void 0:(h=a.filter(function(a){return a.root===!0}),h.call(d)))}}return b.prototype.styleText=function(a){return this._styleText(a)},b.prototype.createNode=function(a){return this._createNode(a)},b.prototype.setInteractions=function(a){return this._setInteractions(a)},b.prototype.styleNode=function(a){return this._styleNode(a)},b}()}.call(this),function(){alchemy.drawing.DrawNodes=function(){function a(){this.drawNode=new alchemy.drawing.DrawNode}return a.prototype.createNode=function(a){return a.enter().append("g").attr("class",function(a){var b;return b=alchemy._nodes[a.id].getProperties(),null!=a.nodeType?"node "+a.nodeType+" active":"node active"}).attr("id",function(a){return"node-"+a.id}).classed("root",function(a){return a.root}),this.drawNode.createNode(a),this.drawNode.styleNode(a),this.drawNode.styleText(a),this.drawNode.setInteractions(a),a.exit().remove()},a.prototype.updateNode=function(a){return this.drawNode.styleNode(a),this.drawNode.styleText(a),this.drawNode.setInteractions(a)},a}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.drawing.EdgeUtils=function(){function b(){this.captionAngle=a(this.captionAngle,this);var b,c,d,e,f,g;c=alchemy.conf,f=alchemy._nodes,d=alchemy._edges,b=new alchemy.clustering,this.edgeStyle=alchemy.conf.cluster?function(a){var c,d,e;return f[a.source.id].properties.root||f[a.target.id].properties.root?(e=f[a.source.id].properties.root?f[a.target.id].properties.cluster:f[a.source.id].properties.cluster,""+b.getClusterColour(e)):f[a.source.id].properties.cluster===f[a.target.id].properties.cluster?(e=f[a.source.id].properties.cluster,""+b.getClusterColour(e)):f[a.source.id].properties.cluster!==f[a.target.id].properties.cluster?(d=""+f[a.source.id].properties.cluster+"-"+f[a.target.id].properties.cluster,c="cluster-gradient-"+d,"url(#"+c+")"):void 0}:null==alchemy.conf.edgeStyle||alchemy.conf.cluster?function(){return""}:function(a){return""+alchemy.conf.edgeStyle(a)},g=function(a){return a*a},e=function(a){var b,c;return c=a.target.x-a.source.x,b=a.target.y-a.source.y,Math.sqrt(b*b+c*c)},this._edgeWalk=function(a,b){var d,f,g;return g=a.target.x-a.source.x,f=a.target.y-a.source.y,e=Math.sqrt(f*f+g*g),"middle"===b?(d=e/2,{x:a.source.x+g*d/e,y:a.source.y+f*d/e}):"linkStart"===b?c.curvedEdges?{x:a.source.x,y:a.source.y}:(d=a.source.r+a.source["stroke-width"],{x:a.source.x+g*d/e,y:a.source.y+f*d/e}):"linkEnd"===b?(d=c.curvedEdges?e:e-(a.target.r+a.target["stroke-width"]),c.directedEdges&&(d-=c.edgeArrowSize),{x:a.source.x+g*d/e,y:a.source.y+f*d/e}):void 0}}return b.prototype.middleLine=function(a){return this._edgeWalk(a,"middle")},b.prototype.startLine=function(a){return this._edgeWalk(a,"linkStart")},b.prototype.endLine=function(a){return this._edgeWalk(a,"linkEnd")},b.prototype.edgeLength=function(a){var b,c,d;return d=a.target.x-a.source.x,b=a.target.y-a.source.y,c=Math.sqrt(b*b+d*d)},b.prototype.edgeAngle=function(a){var b,c;return c=a.target.x-a.source.x,b=a.target.y-a.source.y,Math.atan2(b,c)/Math.PI*180},b.prototype.captionAngle=function(a){var b;return b=this.edgeAngle(a),-90>b||b>90?b+=180:b},b.prototype.hyp=function(a){return hyp(a)},b.prototype.middlePath=function(a){var b,c;return c=d3.select("#path-"+a.id).node(),b=c.getPointAtLength(c.getTotalLength()/2),{x:b.x,y:b.y}},b}()}.call(this),function(){alchemy.drawing.NodeUtils=function(){function a(){var a,b;b=alchemy._nodes,a=alchemy.conf,this.nodeColours=a.cluster?function(c){var d,e;return e=b[c.id].getProperties(),d=isNaN(parseInt(e.cluster))||e.cluster>a.clusterColours.length?a.clusterColours[a.clusterColours.length-1]:a.clusterColours[e.cluster],""+d}:function(){var b;return a.nodeColour?b=a.nodeColour:""}}return a.prototype.nodeStyle=function(a){var b,c;return b=this.nodeColours(a),c="editor"===alchemy.getState("interactions")?"#E82C0C":b,"fill: "+b+"; stroke: "+b+"; stroke-width: "+a["stroke-width"]+";"},a}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.models.Edge=function(){function b(b){this.allNodesActive=a(this.allNodesActive,this),this.setD3Property=a(this.setD3Property,this),this.setProperty=a(this.setProperty,this),this.toPublic=a(this.toPublic,this);var c,d;d=alchemy.conf,this.id=null!=b.id?b.id:""+b.source+"-"+b.target,this.edgeStyle=_.merge(d.edgeStyle,this.edgeStyle),this.state={active:!0},this.properties=b,this._edgeAttributes=new alchemy.models.EdgeAttributes,c=this._edgeAttributes.edgeCaption(this.properties),this.properties.caption=c,this._d3={id:this.id,source:alchemy._nodes[this.properties.source]._d3,target:alchemy._nodes[this.properties.target]._d3,caption:c},alchemy._nodes[""+b.source].addEdge(this.id),alchemy._nodes[""+b.target].addEdge(this.id)}return b.prototype.toPublic=function(){var a;return a=_.keys(this.properties),_.pick(this,a)},b.prototype.setProperty=function(a,b){return this.properties[a]=b},b.prototype.setD3Property=function(a,b){return this._d3[a]=b},b.prototype.allNodesActive=function(){var a,b;return a=d3.select("#node-"+this.properties.source),b=d3.select("#node-"+this.properties.target),!a.classed("inactive")&&!b.classed("inactive")},b}()}.call(this),function(){alchemy.models.EdgeAttributes=function(){function a(){var a,b;b=alchemy.conf,a=b.edgeCaption,"string"==typeof a?this.edgeCaption=function(b){return b[a]}:"function"==typeof a&&(this.edgeCaption=function(b){return a(b)})}return a}()}.call(this),function(){}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.models.Node=function(){function b(c){this.removeProperty=a(this.removeProperty,this),this.setD3Property=a(this.setD3Property,this),this.setProperty=a(this.setProperty,this),this.getProperties=a(this.getProperties,this);var d,e,f;d=alchemy.conf,e=new alchemy.models.NodeAttributes,f=e.nodeSize(c),this.id=c.id,this.properties=c,this.state={active:!0},this._d3={id:c.id,r:f,"stroke-width":e.strokeWidth(f),root:this.properties[d.rootNodes]},this.nodeStyle=_.merge(d.nodeStyle,this.nodeStyle),this.adjacentEdges=[],b.prototype.all.push(this.id),d.nodeTypes&&(this.nodeType=this.properties[Object.keys(alchemy.conf.nodeTypes)],this.nodeType&&(this._d3.nodeType=this.nodeType))}return b.prototype.addEdge=function(a){return this.adjacentEdges.push(a),this.adjacentEdges=_.uniq(this.adjacentEdges)},b.prototype.outDegree=function(){return this.adjacentEdges.length},b.prototype.neighbors=function(){var a;return a=new RegExp("[("+this.id+"\\-)(\\-"+this.id+")]","g"),_.map(this.adjacentEdges,function(b){return b.replace(a,"")})},b.prototype.getProperties=function(){return this.properties},b.prototype.setProperty=function(a,b){return this.properties[a]=b},b.prototype.setD3Property=function(a,b){return this._d3[a]=b},b.prototype.removeProperty=function(a){return null!=this.properties.property?_.omit(this.properties,a):void 0},b.prototype.all=[],b}()}.call(this),function(){alchemy.models.NodeAttributes=function(){function a(){var a;a=alchemy.conf.rootNodes,"function"==typeof alchemy.conf.nodeRadius?this.nodeSize=function(b){return null!=b[a]&&d[a]?alchemy.conf.rootNodeRadius(b):alchemy.conf.nodeRadius(b)}:"string"==typeof alchemy.conf.nodeRadius?this.nodeSize=function(b){var c;return c=alchemy.conf.nodeRadius,null!=b[a]?alchemy.conf.rootNodeRadius:null!=b[c]?b[c]:alchemy.defaults.rootNodeRadius}:"number"==typeof alchemy.conf.nodeRadius&&(this.nodeSize=function(b){return null!=b[a]?alchemy.conf.rootNodeRadius:alchemy.conf.nodeRadius})}return a.prototype.strokeWidth=function(a){return a/3},a}()}.call(this),function(){alchemy.utils={deselectAll:function(){var a;if(null!=(a=d3.event)?!a.defaultPrevented:!0)return alchemy.vis.selectAll(".node, .edge").classed("selected highlight",!1),d3.select(".alchemy svg").classed({"highlight-active":!1}),alchemy.conf.showEditor===!0&&alchemy.modifyElements.nodeEditorClear(),alchemy.vis.selectAll("line.edge").classed("highlighted connected unconnected",!1),alchemy.vis.selectAll("g.node,circle,text").classed("selected unselected neighbor unconnected connecting",!1),alchemy.conf.deselectAll?alchemy.conf.deselectAll():void 0},centreView:function(a){var b,c,d,e,f,g,h,i,j;return g=$("#graph").get(0),d=$(a).get(0),h=g.getBoundingClientRect(),e=d.getBoundingClientRect(),b=[h.width/2+h.left-e.left-e.width/2,h.height/2+h.top-e.top-e.height/2],f=getCurrentViewParams(),i=parseFloat(f[0])+b[0],j=parseFloat(f[1])+b[1],c=parseFloat(f[2]),alchemy.vis.transition().attr("transform","translate("+i+", "+j+") scale("+c+")"),zoom.translate([i,j]).scale(c)},nodeText:function(a){var b,c;return c=alchemy._nodes[a.id],alchemy.conf.nodeCaption&&"string"==typeof alchemy.conf.nodeCaption?null!=c.properties[alchemy.conf.nodeCaption]?c.properties[alchemy.conf.nodeCaption]:"":alchemy.conf.nodeCaption&&"function"==typeof alchemy.conf.nodeCaption?(b=alchemy.conf.nodeCaption(c),(void 0===b||"undefined"===String(b))&&(alchemy.log.caption="At least one caption returned undefined",alchemy.conf.caption=!1),b):void 0}}}.call(this),function(){alchemy.utils.warnings={dataWarning:function(){var a;return alchemy.conf.dataWarning&&"function"==typeof alchemy.conf.dataWarning?alchemy.conf.dataWarning():void("default"===alchemy.conf.dataWarning&&(a='<div class="modal fade" id="no-results">\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n                <h4 class="modal-title">Sorry!</h4>\n            </div>\n            <div class="modal-body">\n                <p>'+alchemy.conf.warningMessage+'</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n            </div>\n        </div>\n    </div>\n</div>',$("body").append(a),$("#no-results").modal("show"),$("#loading-spinner").hide()))},divWarning:function(){return"create an element that matches the value for 'divSelector' in your conf.\nFor instance, if you are using the default 'divSelector' conf, simply provide\n<div id='#alchemy'></div>."}}}.call(this);